name: Simple Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Set up JDK for backend
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 4: Install frontend dependencies and build
      - name: Build Frontend
        working-directory: ./Frontend
        run: |
          npm ci
          npm run build
          docker build -t ${{ secrets.DOCKER_USERNAME }}/teledata-frontend:${{ github.sha }} .

      # Step 5: Build backend
      - name: Build Backend
        working-directory: ./Backend
        run: |
          mvn clean package
          docker build -t ${{ secrets.DOCKER_USERNAME }}/teledata-backend:${{ github.sha }} .

      # Step 6: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Push Docker images
      - name: Push Docker Images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/teledata-frontend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/teledata-backend:${{ github.sha }}

      # Step 8: Deploy to EC2
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
        run: |
          echo -e "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_INSTANCE_IP << EOF
            # Install Docker if not present
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ubuntu
            fi

            # Install Docker Compose if not present
            if ! command -v docker-compose >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Login to Docker Hub on EC2
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Create project directory
            mkdir -p /home/ubuntu/app
            cd /home/ubuntu/app

            # Write simple docker-compose.yaml
            cat > docker-compose.yaml << INNER_EOF
            version: "3.8"
            services:
              frontend:
                image: ${{ secrets.DOCKER_USERNAME }}/teledata-frontend:${{ github.sha }}
                ports:
                  - "80:80"
              backend:
                image: ${{ secrets.DOCKER_USERNAME }}/teledata-backend:${{ github.sha }}
                ports:
                  - "8080:8080"
            INNER_EOF

            # Start containers
            docker-compose up -d

            # Show running containers
            echo "Containers running:"
            docker ps
          EOF
          rm -f private_key.pem