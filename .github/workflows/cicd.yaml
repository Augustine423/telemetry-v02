name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_COMPOSE_VERSION: "2.24.7"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 30s
          script_stop: true
          script: |
            set -e
            
            echo "üîÑ Updating system packages..."
            sudo apt update -y && sudo apt upgrade -y

            echo "üê≥ Installing Docker if not present..."
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sudo sh
              sudo usermod -aG docker ${USER}
              sudo systemctl enable docker
            fi

            echo "üêô Installing Docker Compose if not present..."
            if ! command -v docker-compose >/dev/null 2>&1; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "üìÅ Setting up project directory..."
            PROJECT_DIR="/home/ubuntu/telemetry-v02"
            mkdir -p "${PROJECT_DIR}"
            cd "${PROJECT_DIR}"

            echo "üîÑ Syncing repository..."
            if [ -d ".git" ]; then
              git fetch --all
              git reset --hard origin/main
              git clean -fd
            else
              git clone https://github.com/${{ github.repository }} .
            fi

            echo "üßπ Cleaning up Docker resources..."
            docker image prune -f
            docker system prune -f
            
            echo "üèóÔ∏è Building and starting containers..."
            docker-compose down --remove-orphans
            docker-compose build --no-cache
            docker-compose up -d --remove-orphans --force-recreate

            echo "üìÖ Configuring cron job..."
            CRON_FILE="/tmp/crontab.tmp"
            CRON_JOB="*/5 * * * * ${PROJECT_DIR}/upload-logs-to-s3.sh"
            (crontab -l 2>/dev/null | grep -v 'upload-logs-to-s3.sh' || true; echo "${CRON_JOB}") > "${CRON_FILE}"
            crontab "${CRON_FILE}"
            rm -f "${CRON_FILE}"
            
            echo "‚úÖ Deployment completed successfully!"

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 30s
          script: |
            cd /home/ubuntu/telemetry-v02
            if ! docker-compose ps | grep "Up"; then
              echo "‚ùå Containers failed to start!"
              exit 1
            fi
            echo "‚úì Containers are running successfully"